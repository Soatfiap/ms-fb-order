version: "3.2"
services:
  app:
#    image: 4soatg44/ms-fb-order:1.0.0
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/challenge"
      SPRING_DATASOURCE_USERNAME: "arch"
      SPRING_DATASOURCE_PASSWORD: "challenge"
      SPRING_PORT: "8080"
      MERCADO_TOKEN: "Bearer TEST-8984958385382549-010720-8b45e680cd085f9976863a95655daff7-143716477"
      TOKEN_FALLBACK: "ODk4NDk1ODM4NTM4MjU0OS0wMTA3MjAtOGI0NWU2ODBjZDA4NWY5OTc2ODYzYTk1NjU1ZGFmZjctMTQzNzE2NDc3"
      AWS_ACCESS_KEY_ID: ""
      AWS_SECRET_ACCESS_KEY: ""
      AWS_COGNITO_USER_POOL_ID: "us-east-1_ssXveW6jC"
      MERCADO_API: "https://api.mercadopago.com"
      MS_FB_CADASTRO: "http://localhost:8082"
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_PORT: "5672"
      RABBITMQ_USERNAME: "guest"
      RABBITMQ_PASSWORD: "guest"
      RABBITMQ_QUEUE_NAME: "saga-payment"
    networks:
      - netChallenge
    restart: always

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: challenge
      POSTGRES_USER: "arch"
      POSTGRES_PASSWORD: "challenge"
    ports:
      - "5432:5432"
    volumes:
      - volume-db-challenge:/var/lib/postgresql/data
    networks:
      - netChallenge

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - netChallenge

volumes:
  volume-db-challenge:

networks:
  netChallenge:
    driver: bridge
